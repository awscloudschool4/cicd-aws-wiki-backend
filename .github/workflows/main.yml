name: Update Manifest on Develop Change

on:
  push:
    branches:
      - develop

jobs:
  detect-and-deploy:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v34

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Determine backend image version
        id: backend-version
        run: |
          CURRENT_VERSION=$(grep -oP 'codingalice/aws-wiki-backend:\K[0-9]+\.[0-9]+' manifest/back/backend.yaml)
          if [ -z "$CURRENT_VERSION" ]; then
            CURRENT_VERSION=1.0
          fi
          MAJOR_VERSION=$(echo $CURRENT_VERSION | cut -d '.' -f 1)
          MINOR_VERSION=$(echo $CURRENT_VERSION | cut -d '.' -f 2)
          if echo "${{ github.event.head_commit.message }}" | grep -q 'release'; then
            MAJOR_VERSION=$(echo "$MAJOR_VERSION + 1" | bc)
            MINOR_VERSION=0
            echo "IS_RELEASE=true" >> $GITHUB_ENV
          else
            MINOR_VERSION=$(echo "$MINOR_VERSION + 1" | bc)
            echo "IS_RELEASE=true" >> $GITHUB_ENV
          fi
          NEW_VERSION="$MAJOR_VERSION.$MINOR_VERSION"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
      - name: Build and Push Backend Image
        run: |
          docker build -t codingalice/aws-wiki-backend:${{ env.NEW_VERSION }} .
          docker push codingalice/aws-wiki-backend:${{ env.NEW_VERSION }}
      - name: Update backend.yaml
        run: |
          sed -i 's|image: codingalice/aws-wiki-backend:.*|image: codingalice/aws-wiki-backend:${{ env.NEW_VERSION }}|' manifest/back/backend.yaml
      - name: Create Release
        if: env.IS_RELEASE == 'true'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ env.NEW_VERSION }}"
          release_name: "v${{ env.NEW_VERSION }}"
          body: |
            Changes in this Release
            - Update to v${{ env.NEW_VERSION }}
          draft: false
          prerelease: false
      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add manifest/back/backend.yaml
          git commit -m "Update Docker images in manifest files with ${{ env.NEW_VERSION }}"
          git push origin develop
